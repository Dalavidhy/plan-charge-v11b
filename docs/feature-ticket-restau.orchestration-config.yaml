# Restaurant Ticket Feature - Orchestration Configuration
# This file defines the automated execution parameters for parallel streams

orchestration:
  id: TR-ORCH-001
  name: "Restaurant Ticket Feature Orchestration"
  version: "1.0.0"
  mode: parallel
  start_date: "2025-01-27"
  end_date: "2025-02-07"
  
execution:
  strategy: "parallel-with-sync"
  max_concurrent_tasks: 6
  delegation_mode: "automatic"
  monitoring_interval: 300  # seconds
  safety_mode: "enabled"
  
streams:
  - id: "stream-a-backend"
    name: "Backend Development Stream"
    type: "development"
    priority: "critical"
    agents:
      - id: "agent-a1"
        name: "Backend-Database-Specialist"
        type: "backend"
        skills: ["PostgreSQL", "SQLAlchemy", "Alembic", "Python"]
        max_concurrent_tasks: 2
      - id: "agent-a2"
        name: "Backend-Service-Developer"
        type: "backend"
        skills: ["FastAPI", "Python", "Business Logic", "REST"]
        max_concurrent_tasks: 3
        
  - id: "stream-b-frontend"
    name: "Frontend Development Stream"
    type: "development"
    priority: "high"
    agents:
      - id: "agent-b1"
        name: "Frontend-UI-Designer"
        type: "frontend"
        skills: ["Figma", "React", "Material-UI", "UX"]
        max_concurrent_tasks: 2
      - id: "agent-b2"
        name: "Frontend-Developer"
        type: "frontend"
        skills: ["React", "TypeScript", "Redux", "API Integration"]
        max_concurrent_tasks: 3
        
  - id: "stream-c-testing"
    name: "Testing & DevOps Stream"
    type: "quality"
    priority: "high"
    agents:
      - id: "agent-c1"
        name: "QA-Test-Engineer"
        type: "qa"
        skills: ["Pytest", "Jest", "Selenium", "Performance Testing"]
        max_concurrent_tasks: 2
      - id: "agent-c2"
        name: "DevOps-Engineer"
        type: "devops"
        skills: ["Docker", "Kubernetes", "GitHub Actions", "Monitoring"]
        max_concurrent_tasks: 2

monitoring:
  dashboard:
    refresh_rate: 5  # seconds
    metrics:
      - "task_completion_rate"
      - "agent_utilization"
      - "stream_progress"
      - "blocking_time"
      - "error_rate"
      
  alerts:
    - type: "task_delay"
      threshold: 14400  # 4 hours in seconds
      action: "escalate"
      severity: "medium"
      
    - type: "test_coverage"
      threshold: 80  # percentage
      action: "block_deployment"
      severity: "high"
      
    - type: "api_response_time"
      threshold: 500  # milliseconds
      action: "performance_review"
      severity: "medium"
      
    - type: "critical_bug"
      threshold: 1  # count
      action: "all_hands"
      severity: "critical"

safety:
  checkpoints:
    - id: "cp-1"
      name: "Database Schema Validation"
      day: 1
      blocker: true
      validation:
        - "migrations_tested"
        - "rollback_verified"
        - "performance_benchmarked"
        
    - id: "cp-2"
      name: "API Contract Lock"
      day: 3
      blocker: true
      validation:
        - "openapi_spec_finalized"
        - "frontend_backend_aligned"
        - "mocks_available"
        
    - id: "cp-3"
      name: "Integration Readiness"
      day: 5
      blocker: true
      validation:
        - "unit_tests_passing"
        - "api_endpoints_functional"
        - "frontend_components_ready"
        
    - id: "cp-4"
      name: "Production Readiness"
      day: 8
      blocker: true
      validation:
        - "security_audit_passed"
        - "performance_validated"
        - "documentation_complete"

synchronization:
  daily_syncs:
    - time: "09:00"
      type: "standup"
      duration: 15
      required: ["all-agents"]
      
    - time: "13:00"
      type: "progress-check"
      duration: 5
      required: ["active-agents"]
      
    - time: "17:00"
      type: "end-of-day"
      duration: 15
      required: ["all-agents"]
      
  stream_coordination:
    - trigger: "api_endpoints_ready"
      source: "stream-a-backend"
      target: "stream-b-frontend"
      action: "start_integration"
      
    - trigger: "service_complete"
      source: "stream-a-backend"
      target: "stream-c-testing"
      action: "start_unit_tests"
      
    - trigger: "components_ready"
      source: "stream-b-frontend"
      target: "stream-c-testing"
      action: "start_ui_tests"

quality_gates:
  code_coverage:
    target: 90
    enforce: true
    
  performance:
    api_response: 500  # ms
    ui_load: 2000  # ms
    csv_generation: 5000  # ms for 1000 employees
    
  security:
    vulnerability_scan: true
    dependency_check: true
    code_analysis: true

resource_allocation:
  stream_a:
    developers: 2
    hours_per_day: 8
    days: 6
    
  stream_b:
    developers: 1
    designers: 1
    hours_per_day: 8
    days: 6
    
  stream_c:
    qa_engineers: 1
    devops: 1
    hours_per_day: 8
    days: 8