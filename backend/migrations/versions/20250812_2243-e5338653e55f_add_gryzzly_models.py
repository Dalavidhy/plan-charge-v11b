"""add_gryzzly_models

Revision ID: e5338653e55f
Revises: 10ef8daf5c7a
Create Date: 2025-08-12 22:43:44.150641

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e5338653e55f'
down_revision = '10ef8daf5c7a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('identity_links', 'decided_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default='now()',
               existing_nullable=False)
    # Skip these constraint operations as they cause dependency issues
    # The unique constraints and indexes already exist and don't need to be recreated
    # op.drop_constraint('payfit_absences_payfit_id_key', 'payfit_absences', type_='unique')
    # op.drop_index('ix_payfit_absences_payfit_id', table_name='payfit_absences')
    # op.create_index(op.f('ix_payfit_absences_payfit_id'), 'payfit_absences', ['payfit_id'], unique=True)
    # op.drop_constraint('payfit_contracts_payfit_id_key', 'payfit_contracts', type_='unique')
    # op.drop_index('ix_payfit_contracts_payfit_id', table_name='payfit_contracts')
    # op.create_index(op.f('ix_payfit_contracts_payfit_id'), 'payfit_contracts', ['payfit_id'], unique=True)
    # op.drop_constraint('payfit_employees_payfit_id_key', 'payfit_employees', type_='unique')
    # op.drop_index('ix_payfit_employees_payfit_id', table_name='payfit_employees')
    # op.create_index(op.f('ix_payfit_employees_payfit_id'), 'payfit_employees', ['payfit_id'], unique=True)
    op.alter_column('payfit_sync_logs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_payfit_sync_logs_updated_at'), 'payfit_sync_logs', ['updated_at'], unique=False)
    op.alter_column('stg_roster', 'seen_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default='now()',
               existing_nullable=False)
    op.alter_column('sync_events', 'received_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default='now()',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sync_events', 'received_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("'2025-08-12 17:31:35.457926+00'::timestamp with time zone"),
               existing_nullable=False)
    op.alter_column('stg_roster', 'seen_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("'2025-08-12 17:31:35.457926+00'::timestamp with time zone"),
               existing_nullable=False)
    op.drop_index(op.f('ix_payfit_sync_logs_updated_at'), table_name='payfit_sync_logs')
    op.alter_column('payfit_sync_logs', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_payfit_employees_payfit_id'), table_name='payfit_employees')
    op.create_index('ix_payfit_employees_payfit_id', 'payfit_employees', ['payfit_id'], unique=False)
    op.create_unique_constraint('payfit_employees_payfit_id_key', 'payfit_employees', ['payfit_id'])
    op.drop_index(op.f('ix_payfit_contracts_payfit_id'), table_name='payfit_contracts')
    op.create_index('ix_payfit_contracts_payfit_id', 'payfit_contracts', ['payfit_id'], unique=False)
    op.create_unique_constraint('payfit_contracts_payfit_id_key', 'payfit_contracts', ['payfit_id'])
    op.drop_index(op.f('ix_payfit_absences_payfit_id'), table_name='payfit_absences')
    op.create_index('ix_payfit_absences_payfit_id', 'payfit_absences', ['payfit_id'], unique=False)
    op.create_unique_constraint('payfit_absences_payfit_id_key', 'payfit_absences', ['payfit_id'])
    op.alter_column('identity_links', 'decided_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("'2025-08-12 17:31:35.457926+00'::timestamp with time zone"),
               existing_nullable=False)
    # ### end Alembic commands ###